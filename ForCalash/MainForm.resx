<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>